#spring.kafka.bootstrap-servers=

# earliest: \uC624\uD504\uC14B\uC744 \uCD08\uAE30\uAC12\uC73C\uB85C \uC790\uB3D9 \uB9AC\uC14B
# latest: \uC624\uD504\uC14B \uAC12\uC744 \uCD5C\uB300\uAC12\uC73C\uB85C \uC790\uB3D9 \uB9AC\uC14B
# none: \uCEE8\uC288\uBA38 \uADF8\uB8F9\uC5D0\uC11C \uC774\uC804 \uC624\uD504\uC14B\uC744 \uCC3E\uC9C0 \uBABB\uD55C\uB2E4\uBA74, \uCEE8\uC288\uBA38\uC5D0 \uC5D0\uB7EC\uB97C \uB358\uC9D0
# anything else: \uCEE8\uC288\uBA38\uC5D0 \uC5D0\uB7EC\uB97C \uB358\uC9D0 

spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.max-poll-records=20000
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#spring.kafka.consumer.properties.spring.json.value.default.type=kr.co.parkingcloud.local.monitoring.domain.MonitorData
#spring.kafka.consumer.properties.spring.json.trusted.packages=kr.co.parkingcloud.local.monitoring.domain

spring.kafka.consumer.heartbeat-interval=100
spring.kafka.listener.poll-timeout=1000

spring.kafka.listener.type=batch
#spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.group-id=test-group

spring.kafka.listener.ack-mode=batch
spring.kafka.listener.concurrency=1

spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.use_sql_comments=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.type=trace

spring.h2.console.enabled=true

telegram.url=


